package modules

import (
	"github.com/tankbusta/hashvalidate/hashes"
	"github.com/tankbusta/hashvalidate/tokenizer"
)

type kerberos_19900 struct{}

func init() {
	hashes.Register(19900, kerberos_19900{})
}

func (s kerberos_19900) Name() string { return "Kerberos 5, etype 18, Pre-Auth" }

func (s kerberos_19900) Example() string {
	return "$krb5pa$18$hashcat$HASHCATDOMAIN.COM$96c289009b05181bfd32062962740b1b1ce5f74eb12e0266cde74e81094661addab08c0c1a178882c91a0ed89ae4e0e68d2820b9cce69770"
}

func (s kerberos_19900) Type() int { return 19900 }

func (s kerberos_19900) Tokens() []tokenizer.Token {
	// The rest of this is generated by GenerateTokens based on the incoming hash
	return []tokenizer.Token{
		{
			Length:     11,
			Attributes: tokenizer.FixedLength | tokenizer.VerifySignature,
			Signatures: []tokenizer.Signature{
				{
					Expected: "$krb5pa$18$",
				},
			},
		},
		{
			Separator:  "$",
			LengthMin:  1,
			LengthMax:  512,
			Attributes: tokenizer.VerifyLength,
		},
		{
			Separator:  "$",
			LengthMin:  1,
			LengthMax:  512,
			Attributes: tokenizer.VerifyLength,
		},
		{
			Separator:  "$",
			LengthMin:  104,
			LengthMax:  112,
			Attributes: tokenizer.VerifyLength | tokenizer.VerifyHex,
		},
	}
}
